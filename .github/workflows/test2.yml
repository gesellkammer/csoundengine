on: [push]

jobs:
  alltest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "windows-latest", "ubuntu-latest", "macos-latest" ]
        python-version: [ "3.9", "3.11", "3.12" ]
        install-method: [ "git" ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: linux setup
        if: runner.os == 'linux'
        run: |
          sudo apt install csound csound libcsnd-dev
          csound --version

      - name: macos - install csound
        if: runner.os == 'macOS'
        run: |
          curl -L -o csound6.18.dmg https://github.com/csound/csound/releases/download/6.18.1/Csound-MacOS-universal-6.18.1.dmg
          brew install p7zip
          7z x csound6.18.dmg
          cd Csound-universal-6.18.1
          sudo installer -pkg csound-MacOS-universal-6.18.1.pkg -target /
          csound --version
          cd ..

      - name: windows setup
        if: runner.os == 'windows'
        run: |
          curl -L -o csound-binaries.zip https://github.com/csound/csound/releases/download/6.18.1/Csound-6.18.1-windows-x64-binaries.zip
          Expand-Archive csound-binaries.zip -DestinationPath "C:/Program Files/csound-binaries"
          ls -r "C:/Program Files/csound-binaries"

          "C:/Program Files/csound-binaries/build/Release" | Out-File -FilePath $env:GITHUB_PATH -Append
          [Environment]::SetEnvironmentVariable("PATH", $Env:PATH + ";C:/Program Files/csound-binaries/build/Release", [EnvironmentVariableTarget]::Machine)
          $Env:Path = $Env:Path + ";C:/Program Files/csound-binaries/build/Release"
          echo "$PATH"

          # Write-Output $Env:PATH
          csound.exe --version

      - name: install from repo
        if: ${{ matrix.install-method == 'git' }}
        run: |
          pip install .

      - name: install from pip
        if: ${{ matrix.install-method == 'pip' }}
        run: |
          pip install csoundengine

      - name: test offline
        run: |
          cd test
          python test1.py -o test1-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.install-method }}.wav

      - name: test live
        if: runner.os != 'macos'
        run: |
            cd test
            python test2.py
              
      - uses: actions/upload-artifact@v3
        with:
          path: test/*.wav

